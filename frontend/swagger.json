openapi: 3.0.1
info:
  title: ADA-PIPE
  description: For the protected end points, you need to genereate an access token (e.g. using postman) and provide it by opening "Authorize"
  version: v1
paths:
  /adaptExecution/{pipeline}:
    get:
      tags:
        - Export
      summary: Compute the adapted schedule based on the pipeline with the ID and the chunk (steps)
      parameters:
        - name: pipeline
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lists of pipelines and steps
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepProvider'
            text/html:
              schema:
                $ref: '#/components/schemas/DepProvider'
            application/json:
              schema:
                $ref: '#/components/schemas/DepProvider'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
  /importRuntimeMetrics:
    post:
      tags:
        - Import
      summary: Import runtime metrics
      responses:
        '200':
          description: Import the runtime, monitoring and policy information of the continuum
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RuntimeMetrics'
            application/json:
              schema:
                $ref: '#/components/schemas/RuntimeMetrics'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
  /importSimData/{user}/{pipeline}:
    post:
      tags:
        - Import
      summary: Import simulation data
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: pipeline
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of simulation data matching the query
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
  /importPipeline/{user}/{pipeline}:
    post:
      tags:
        - Import
      summary: Import pipeline in DSL
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: pipeline
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lists of pipelines and steps
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
  /importUser/{user}:
    post:
      tags:
        - Import
      summary: Import user's token
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lists of users
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
components:
  schemas:
    DepProvider:
      type: object
      properties:
        pipeline:
          type: string
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    PipelineProvider:
      type: object
      properties:
        user:
          type: string
        pipeline:
          type: string
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        user:
          type: string
        errorMessage:
          type: string
          nullable: true
    RuntimeMetrics:
      type: object
      properties:
        runtime_metrics:
          type: string
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    JToken:
      type: array
      items:
        $ref: '#/components/schemas/JToken'
  securitySchemes:
    Bearer:
      type: apiKey
      description: |-
        Enter you your Keycloak bearer token in the format below (please do not forget the "Bearer")

         Bearer YOUR_ACCESS_TOKEN
      name: Authorization
      in: header
