openapi: 3.0.1
info:
  title: ADA-PIPE
  description: For the protected end points, you need to genereate an access token (e.g. using postman) and provide it by opening "Authorize"
  version: v1
paths:
  /adaptExecution/{pipeline}/{chunk}:
    get:
      tags:
        - Export
      summary: Compute the adapted schedule based on runtime parameters for the pipeline with the ID
      parameters:
        - name: chunk
          in: path
          required: true
          schema:
            type: string
        - name: pipeline
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/Pipeline'
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          description: Schedules in JSON format
          content:
            application/json:
              schema:
                type: integer
  /importWorkerPools/{workerPools}:
    post:
      tags:
        - Import
      summary: Import WorkerPools
      parameters:
        - name: workerPools
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of workers of Cloud and Edge
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WorkerPool'
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerPool'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
  /importSimData/{user}/{pipeline}:
    post:
      tags:
        - Import
      summary: Import simulation data
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: pipeline
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of simulation data matching the query
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
  /importPipeline/{user}/{pipeline}:
    post:
      tags:
        - Import
      summary: Import pipeline in DSL
      consumes:
        - multipart/form-data
        - text/plain; charset=utf-8
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          schema:
            type: string
        - name: pipeline
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lists of pipelines and steps
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineProvider'
        '401':
          description: Unauthorized
      security:
        - Bearer: []
components:
  schemas:
    Pipeline:
      type: object
      properties:
        pipeline:
          type: string
          nullable: true
        chunk:
          type: string
          nullable: true
      additionalProperties:
          $ref: '#/components/schemas/JToken'
    PipelineProvider:
      type: object
      properties:
        user:
          type: string
          nullable: true
        pipeline:
          type: string
          nullable: true
      additionalProperties: false
    WorkerPool:
      type: object
      properties:
        workerPools:
          type: string
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    JToken:
      type: array
      items:
        $ref: '#/components/schemas/JToken'
  securitySchemes:
    Bearer:
      type: apiKey
      description: |-
        Enter your Keycloak bearer token in the format below (plz do not forget the "Bearer")

         Bearer YOUR_ACCESS_TOKEN
      name: Authorization
      in: header
